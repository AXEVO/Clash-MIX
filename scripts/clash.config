#!/system/bin/sh

# busybox path
now=$(date +"%I.%M %p")
busybox_path="/data/adb/magisk/busybox"
ipv6=$(grep "ipv6" /data/clash/template | ${busybox_path} awk -F ': ' '{print $2}' | head -1)

run_usage="true"
#显示资源占用

mark_id="2022"

# 工作模式
mode="blacklist"

network_mode="UDP"
# TCP: REDIRECT / UDP: TPROXY / MIXED: TCP + TUN

# ap_list=("softap+" "wlan+" "swlan+" "ap+" "rndis+")
# untuk info AP type ifconfig di terminal
ap_list=("softap+" "wlan+" "swlan+" "ap+" "rndis+")
ignore_out_list=()
# ap list

port_detect="true"
# 端口检测
# NAT KERNEL
nat_kernel="false"
# 自动绕过本机ip,filter_local请勿轻易打开,打开后有可能引起设备软重启,如你手机有获取到公网ip.
# 优先重启cfm,即可绕过本机ip,检查是否正常,次要选择尝试打开filter_local,如遇设备软重启,请关闭.
filter_local="false"
monitor_local_ip="true"

# 选择内核
use_premium="false"

# 定时更新geo文件和订阅 cron定时器教程：  https://crontab.guru/ 设置为每天凌晨五点更新
update_interval="0 5 * * *"
# 订阅链接 建议使用rule-provider 

auto_updateSubcript="false"
# setting auto update subcript
Subcript_url="link url"
# url langganan config

config_online="false"
# download langganan/config

if [ "${use_premium}" = "true" ] ; then
    tun_device="utun"
else
    tun_device=$(grep "device" /data/clash/template | ${busybox_path} awk -F ': ' '{print $2}')
fi
# tun device

Cgroup_memory="false"
Cgroup_memory_limit="50M"
Cgroup_memory_path=""
# 留空则自动获取
# 限制内存使用，量力而行，限制太死会造成CPU占用过高，-1则不限制，留空则不操作
# 更新限制请保存后执行 /data/clash/scripts/clash.tool -l

# clash配置目录 以下为各个文件路径
Clash_bin_name="clash"
Clash_data_dir="/data/clash"
Clash_template="${Clash_data_dir}/template"
Clash_run_path="${Clash_data_dir}/run"
CFM_logs_file="${Clash_run_path}/run.logs"
Clash_pid_file="${Clash_run_path}/clash.pid"
Clash_bin="${Clash_data_dir}/kernel"
Clash_lib="${Clash_bin}/lib"
Clash_bin_path="${Clash_bin}/${Clash_bin_name}"
Clash_Premium="${Clash_lib}/clash.premium"
Clash_Meta="${Clash_lib}/clash.meta"
Clash_scripts_dir="${Clash_data_dir}/scripts"
appuid_file="${Clash_run_path}/appuid.list"
filter_packages_file="${Clash_data_dir}/packages.list"
system_packages_file="/data/system/packages.list"

#多配置文件切换 建议不要手动更改 使用控制器切换
use_config="false"
if [ "${use_config}" == "false" ] ; then
    Clash_config_file="${Clash_data_dir}/config.yaml"
else
    Clash_config_file="${Clash_data_dir}/assets/config/${use_config}"
fi

# 合并后配置路径
temporary_config_file="${Clash_run_path}/config.yaml"

#自动更新内核
schedule_update_core="false"
url_meta="https://github.com/MetaCubeX/Clash.Meta/releases"
url_premium="https://github.com/Dreamacro/clash/releases"
arm=$(uname -m)
if [ "${use_premium}" == "false" ] ; then
    file_kernel="clash.meta"
    meta_alpha="true"
        tag="Prerelease-Alpha"
        tag_name="alpha-[0-9,a-z]+"
    if [ ${arm} == "aarch64" ] ; then
      platform="android"
      arch="arm64"
    else
      platform="linux"
      arch="armv7"
    fi
else
    file_kernel="clash.premium"
    platform="linux"
    if [ ${arm} == "aarch64" ] ; then
      arch="arm64"
    else
      arch="armv7"
    fi
fi

# 自动更新geo文件
auto_updateGeoX="true"
Clash_geodata_mode=$(grep "geodata-mode" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')
if [ "${use_premium}" == "true" ] ; then
    Clash_GeoIP_file="${Clash_data_dir}/Country.mmdb"
    GeoIP_dat_url="https://github.com/Loyalsoldier/geoip/raw/release/Country.mmdb"
else
    Clash_GeoIP_file="${Clash_data_dir}/GeoIP.dat"
    GeoIP_dat_url="https://github.com/Loyalsoldier/v2ray-rules-dat/raw/release/geoip.dat"
fi
Clash_GeoSite_file="${Clash_data_dir}/GeoSite.dat"
GeoSite_url="https://github.com/Loyalsoldier/v2ray-rules-dat/raw/release/geosite.dat"



# IPTABLES
iptables_version=$(iptables -V | grep -o "v1\.[0-9]")
if [ "${iptables_version}" = "v1.6" ] || [ "${iptables_version}" = "v1.8" ] ; then
    iptables_wait="iptables -w 100"
    ip6tables_wait="ip6tables -w 100"
else
    export ANDROID_DATA=/data
    export ANDROID_ROOT=/system
    iptables_wait="iptables"
    ip6tables_wait="ip6tables"
fi

# tproxy-port
Clash_tproxy_port=$(grep "tproxy-port" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')
Clash_redir_port=$(grep "redir-port" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')
# dns
Clash_dns_port=$(grep "listen" ${Clash_template} | ${busybox_path} awk -F ':' '{print $3}')
# tun status
Clash_tun_status=$(${busybox_path} awk -F ': ' '/^tun: *$/{getline; print $2}' ${Clash_template})
Clash_stack_mode=$(grep "stack" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')
Clash_tcp_concurrent=$(grep "tcp-concurrent" ${Clash_template} | ${busybox_path} awk -F ':' '{print $2}')
Clash_enhanced_mode=$(grep "enhanced-mode" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')
Clash_fake_ip_range=$(grep "fake-ip-range" ${Clash_template} | ${busybox_path} awk -F ': ' '{print $2}')

# v2dns, 0 is v2dns off, 1 is v2dns on
# create akun v2dns di whyvpn ,
dnstt_bin_name="dnstt-client"
dnstt_client_bin="${Clash_bin}/${dnstt_bin_name}"
run_dnstt="0"
dns_for_dnstt="1.1.1.1"
pubkey=""
nsdomain=""

reserved_ip=(0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.88.99.0/24 192.168.0.0/16 198.51.100.0/24 203.0.113.0/24 224.0.0.0/4 240.0.0.0/4 255.255.255.255/32)
reserved_ip6=(::/128 ::1/128 ::ffff:0:0/96 100::/64 64:ff9b::/96 2001::/32 2001:10::/28 2001:20::/28 2001:db8::/32 2002::/16 fc00::/7 fe80::/10 ff00::/8)

log() {
  export TZ=Asia/Jakarta
  echo "${now} $*" | tee -a ${CFM_logs_file} >> /dev/null 2>&1
}
logs() {
  export TZ=Asia/Jakarta
  echo -n "${now} $*" | tee -a ${CFM_logs_file} >> /dev/null 2>&1
}