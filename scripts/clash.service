#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. /data/clash/clash.config
mos_err=0

#上面的是mosdns的故障信号 每次启动时候会被重置为0
#启动mosdns时候如果遇到问题会变成1，然后启动clash的函数检测到1会直接退出

fuck_log() {
    if [ -f /data/clash/run/run.logs ] ; then
    mv data/clash/run/run.logs data/clash/run/log.old
    fi
    rm -rf  /data/clash/run/mosdns.log
    #清除mosdns日志
    echo '' > ${mosdns_logs_file}
    rm -f ${mos_kernel_logs_file}
}

start_mos() {
    if [ "${run_mode}" == "1" ]; then
        mosdns_pid=`cat ${mos_pid_file} 2> /dev/null`
        if (cat /proc/${mosdns_pid}/cmdline | grep -q mosdns) ; then
            echo $date_log"info: 检测到mosdns已启动,此次不启动." >> ${CFM_logs_file}
            exit 1
        fi
    fi
    
    if [ !-f "/data/clash/mosdns/mosdns" ] ; then 
        echo $date_log"err: mosdns内核丢失." >> ${CFM_logs_file}
        mos_err=1
        exit 1
    fi

    if [ -f ${mosdns_config_file} ] ; then
        if [ "${run_mode}" == "1" ]; then
          nohup ${mosdns_bin_path} start -d ${mosdns_data_dir} > ${mosdns_logs_file} 2>&1 &
          echo -n $! "" > ${mos_pid_file}
          sleep 0.05
          mosdns_run_pid=`cat ${mos_pid_file} 2> /dev/null | awk -F ' ' '{print $1}'`
            if (cat /proc/${mosdns_run_pid}/cmdline | grep -q mosdns) ; then
              echo $date_log"info: mosdns已启动." >> ${CFM_logs_file}
            else
              echo $date_log"error: mosdns配置有误,启动失败,以下为错误" >> ${CFM_logs_file}
              echo $date_log"$(cat /data/clash/run/mosdns.log | grep Error)" >> ${CFM_logs_file}
              mos_err=1
              exit 1
            fi
        else
          echo $date_log"info: mosdns已禁用" >> ${CFM_logs_file}
        fi
    else
        echo $date_log"info: mosdns配置文件缺失." >> ${CFM_logs_file}
        mos_err=1
        exit 1
    fi


    if [ !-x "/data/clash/mosdns/mosdns" ] ; then
        echo $date_log"err: mosdns权限异常." >> ${CFM_logs_file}
        mos_err=1
        exit 1
    fi
}

stop_mos() {
    if [ "${run_mode}" == "1" ]; then
      kill -15 `cat ${mos_pid_file}`
      echo $date_log"info: 停止mosdns内核." >> ${CFM_logs_file}
      cp -f ${mos_kernel_logs_file} ${Clash_run_path}/mos_kernel.log.bak
    else
      echo $date_log"info: mosdns未启用" >> ${CFM_logs_file}
    fi
}


start_clash() {
    nohup /data/adb/magisk/busybox crond -c /data/clash/run > /dev/null 2>&1 &
    touch /data/clash/run/cmdRunning && rm -rf /data/clash/run/DEBUG*

    if [ $mos_err == 1 ]; then
        exit 1
    fi
    #mosdns故障时不允许打开clash
    if [ "${config_online}" == "true" ] ; then
        if ! [ "$(head -1 /data/clash/run/root)" == "disable" ] ; then
            if ! (${scripts_dir}/clash.tool -o) ; then
                echo $date_log"err: 下载配置文件失败 请确认网络连接正常" >> ${CFM_logs_file}
                stop_mos
                exit 1
            fi
        fi
    fi

    echo "启动时间 ${date_day}" >> ${CFM_logs_file}
    echo "Clash for Magisk v2.0  魔改版" >> ${CFM_logs_file}

    chmod 0755 /data/clash/core/lib/*

    err="更换内核失败"
    if [ "${use_premium}" == "true" ]; then
        cp -f ${Clash_Premium} /data/clash/core/clash \
        && echo "" || echo $date_log"err: ${err}" >> ${CFM_logs_file}
    else
        cp -f ${Clash_Meta} /data/clash/core/clash \
        && echo "" || echo $date_log"err: ${err}" >> ${CFM_logs_file}
    fi

    if [ -f "/data/adb/modules/ClashForMagisk/disable" ]; then
        echo ""
    else
        ${Clash_bin_path} -v >> ${CFM_logs_file}
    fi

    echo "━━━━━━━━━━━━━━━━━━━━━━" >> ${CFM_logs_file}

    if [ "${ipv6}" == "false" ] ; then
        echo 1 > /proc/sys/net/ipv6/conf/lo/disable_ipv6
        echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6

        echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
        echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
        echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
        echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
    else
        echo 0 > /proc/sys/net/ipv6/conf/lo/disable_ipv6
        echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6

        echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
        echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
        echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
        echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
    fi

    if [ ! -d ${Clash_data_dir}/confs/config ] ; then
        if [ ! "${use_config}" == "false" ]; then
            echo $date_log"info: 未找到/confs/config" >> ${CFM_logs_file}
            echo $date_log"info: 创建folder /confs/config." >> ${CFM_logs_file}
            mkdir -p ${Clash_data_dir}/confs/config
        fi
    fi

    if [ "${use_premium}" == "true" ]; then
        if [ -f "${Clash_bin_path}" ] ; then
            echo $date_log"info: 使用Clash Premium内核" >> ${CFM_logs_file}
        else
            echo $date_log"err: 未找到核心 ${Clash_bin_path}" >> ${CFM_logs_file}
            exit 1
        fi
    else
        if [ -f "${Clash_bin_path}" ] ; then
            echo $date_log"info: 使用Clash Meta内核" >> ${CFM_logs_file}
        else
            echo $date_log"err: 未找到核心 ${Clash_bin_path}" >> ${CFM_logs_file}
            exit 1
        fi
    fi

    echo $date_log"info: 使用配置文件 ${Clash_config_file}." >> ${CFM_logs_file}

    local PID=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${PID}/cmdline | grep -q ${Clash_bin_name}) ; then
        ${scripts_dir}/clash.iptables -s
        exit 1
    else
        echo $date_log"info: 已执行Clash服务" >> ${CFM_logs_file}
    fi

    echo $date_log"info: IPv6状态:[${ipv6}]" >> ${CFM_logs_file}

    if [ "${Clash_tun_status}" == "true" ] ; then
        mkdir -p /dev/net
        [ ! -L /dev/net/tun ] && ln -sf /dev/tun /dev/net/tun
        echo $date_log"info: 使用 [tun] 模式, 堆栈: [${Clash_stack_mode}] " >> ${CFM_logs_file}
        echo $date_log"info: 创建 /dev/net/tun 虚拟网卡" >> ${CFM_logs_file}
        sed -i 's/listen:.*/listen: ""/' /data/clash/template
        sed -i 's/tproxy-port:.*/tproxy-port: 0/' /data/clash/template
    else
        echo $date_log"info: 使用 [tproxy] 模式" >> ${CFM_logs_file}
        sed -i 's/listen:.*/listen: 0.0.0.0:1053/' /data/clash/template
        sed -i 's/tproxy-port:.*/tproxy-port: 9898/' /data/clash/template
    fi

    if [ -f "${temporary_config_file}" ] ; then
        rm -rf ${temporary_config_file}
        echo $date_log"info: 合并配置和模板到 ${temporary_config_file}." >> ${CFM_logs_file}
    fi

    if [ -f "${Clash_dns}" ] ; then
        if [ -f "${Clash_config_file}" ] ; then
           cp -f ${Clash_dns} ${temporary_config_file}.swp && echo "\n" >> ${temporary_config_file}.swp
           sed -n -E '/^proxies:$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
           sed -i '/^[  ]*$/d' ${temporary_config_file}.swp
        else
           echo $date_log"err: ${Clash_config_file} 未找到" >> ${CFM_logs_file}
           stop_mos
           exit 1
        fi
    else
        echo $date_log"err: ${Clash_dns} 未找到" >> ${CFM_logs_file}
        stop_mos
        exit 1
    fi

    mv ${temporary_config_file}.swp ${temporary_config_file} \
    && echo $date_log"info: 合并 ${Clash_config_file} 和模板成功" >> ${CFM_logs_file} || echo $date_log"err: 合并配置 ${Clash_config_file} 和模板失败" >> ${CFM_logs_file}

    if [ ! -f "${temporary_config_file}" ] ; then
       echo $date_log"err: ${temporary_config_file} 未找到" >> ${CFM_logs_file}
       stop_mos
       exit 1
    fi

    if [ -f "${Clash_bin_path}" ] ; then
        chown ${Clash_user_group} ${Clash_bin_path}
        chown ${Clash_user_group} ${temporary_config_file}
        chmod 6755 ${Clash_bin_path}
        chmod 0644 ${temporary_config_file}
        setcap 'cap_net_admin,cap_net_raw+ep' ${Clash_bin_path}

        /data/adb/magisk/busybox crontab -c /data/clash/run -r
        touch /data/clash/run/root
        chmod 0600 /data/clash/run/root

        if [ ! "${schedule_update_core}" == "false" ]; then
            echo "${schedule_update_core} ${scripts_dir}/clash.tool -e" > ${Clash_run_path}/root \
            && echo $date_log"info: 定时更新内核设置为 [${schedule_update_core}]" >> ${CFM_logs_file}
        else
            echo $date_log"info: 定时更新内核未启用" >> ${CFM_logs_file}
        fi

        if [ ! "${update_interval}" == "false" ]; then
            echo "${update_interval} ${scripts_dir}/clash.tool -u" >> ${Clash_run_path}/root \
            && echo $date_log"info: 定时更新Geo文件设置为 [${update_interval}]" >> ${CFM_logs_file}
            echo $date_log"info: 更新Geo设置: [${auto_updateGeoX}] | 传统订阅状态: [${auto_updateSubcript}]" >> ${CFM_logs_file}
        else
            echo $date_log"info: 定时更新Geo文件未启动" >> ${CFM_logs_file}
        fi

        if [ ! "${static_dns}" == "false" ]; then
            echo "*/1 * * * * ${scripts_dir}/clash.tool -k" >> ${Clash_run_path}/root \
            && echo $date_log"warn: 静态dns已启用: ${static_dns}." >> ${CFM_logs_file}
        else
            echo $date_log"info: 静态dns状态: [${static_dns}]" >> ${CFM_logs_file}
        fi

        sed -i '/^[  ]*$/d' ${CFM_logs_file}
        if [ "${filter_local}" == "true" ] && [ "${Clash_tun_status}" == "false" ] ; then
            clash_cron="${scripts_dir}/clash.tool -a"
            echo "*/1 * * * * ${clash_cron}" >> ${Clash_run_path}/root && echo $date_log"warn: 自动绕过本机IP已打开，可能导致手机软重启" >> ${CFM_logs_file}
        else
            echo $date_log"info: 自动绕过本地IP已关闭" >> ${CFM_logs_file}
        fi
        ${scripts_dir}/upSub.sh -s
        echo "0 * * * * ${scripts_dir}/upSub.sh -s " >> ${Clash_run_path}/root \
        && echo $date_log"info: 自动更新流量使用信息已开启." >> ${CFM_logs_file}
    else
        echo $date_log"内核 ${Clash_bin_path} 未找到" >> ${CFM_logs_file}
        stop_mos
        exit 1
    fi

    if [ -f ${temporary_config_file} ] ; then
        ${Clash_bin_path} -t -d ${Clash_data_dir} -f ${temporary_config_file} > ${Clash_run_path}/config.logs \
        && echo "" || echo $date_log"err: ${Clash_config_file} 无法使用" >> ${CFM_logs_file}
        if (${Clash_bin_path} -v > /dev/null 2>&1) ; then
            if (${Clash_bin_path} -t -d ${Clash_data_dir} -f ${temporary_config_file} > /dev/null 2>&1) ; then
                ulimit -SHn 1000000
                nohup /data/adb/magisk/busybox setuidgid 0:3005 ${Clash_bin_path} -d ${Clash_data_dir} -f ${temporary_config_file} > /dev/null  2>&1 & # /data/clash/run/DEBUG.`date`.log 2>&1 &
                echo -n $! > ${Clash_pid_file}
                echo $date_log"info: tcp-concurrent状态:[${Clash_tcp_concurrent}]" >> ${CFM_logs_file}

                if [ "${Cgroup_memory}" == "true" ] ; then
                    if ! (${scripts_dir}/clash.tool -l) ; then
                        echo -n ""
                    fi
                else
                    echo $date_log"info: Cgroup内存限制状态: [${Cgroup_memory}]" >> ${CFM_logs_file}
                fi
                sleep 0.5
                echo "━━━━━━以下为clash内核日志━━━━━━━" >> ${CFM_logs_file}
                sed -i s/.*msg=// ${Clash_run_path}/config.logs
                sed -i 's/configuration file*//' /data/clash/run/config.logs
                while read p; do
                    echo ${date_log}"info:" "$p" >> ${CFM_logs_file}
                done <${Clash_run_path}/config.logs
                echo "━━━━━━Clash内核已成功启动━━━━━━━" >> ${CFM_logs_file}
            else
                echo "━━Clash内核启动失败 以下为报错信息━━" >> ${CFM_logs_file}
                sed -i s/.*msg=// ${Clash_run_path}/config.logs
                sed -i 's/configuration file*//' /data/clash/run/config.logs
                while read p; do
                    echo ${date_log}"err:" "$p" >> ${CFM_logs_file}
                done <${Clash_run_path}/config.logs
                echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" >> ${CFM_logs_file}
                if [ "${use_config}" == "false" ]; then
                    mv ${temporary_config_file} ${Clash_data_dir}/config.yaml
                else
                    mv ${temporary_config_file} ${Clash_data_dir}/confs/config/${use_config}
                fi
                echo $date_log"err: 出现问题，请检查 ${Clash Config_file} 和模板" >> ${CFM_logs_file}
                stop_mos
                exit 1
            fi
        else
            echo $date_log"err: 核心已损坏或不支持">> ${CFM_logs_file}
            stop_mos
            exit 1
        fi
    else
        echo $date_log"err: ${Clash_config_file}未找到" >> ${CFM_logs_file}
        stop_mos
        exit 1
    fi

    if [ "${port_detect}" == "true" ]; then
        if ! (${scripts_dir}/clash.tool -p) ; then
            stop_mos
            exit 0
        fi
    else
        echo $date_log"warn：已跳过端口检查 可能出现整机断网或无法代理流量等故障" >> ${CFM_logs_file}
    fi
}

stop_clash() {
    if (ps -ef > /dev/null 2>&1) ; then
        clashkill=$(ps -ef | grep root | grep "clash -d /data/clash" | /data/adb/magisk/busybox awk '{ print $2 }' | sort -u)
        for clashkil in ${clashkill[*]} ; do
           if [ "${Clash_tun_status}" == "true" ] ; then
              kill -9 ${clashkil}
           else
              kill -15 ${clashkil}
           fi
        done
    else
        echo $date_log"err：出现异常，已强制停止clash内核" >> ${CFM_logs_file}
        kill -9 `cat ${Clash_pid_file}`
    fi

    cronkill=$(ps -ef | grep root | grep "crond -c /data/clash/" | /data/adb/magisk/busybox awk '{ print $2 }' | sort -u)
    for cronkil in ${cronkill[*]} ; do
       kill -15 ${cronkil}
    done

    local PIDs=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${PIDs}/cmdline | grep -q ${Clash_bin_name}) ; then
        echo $date_log"clash关闭失败" >> ${CFM_logs_file}
        ${scripts_dir}/clash.iptables -s
        exit 1
    else
        echo $date_log"warn: Clash已停止运行" >> ${CFM_logs_file}
    fi

    if [ -f /data/clash/run/appuid.list ]; then
        rm -rf /data/clash/run/appuid.list
    fi

    rm -rf /data/clash/run/clash.pid

    rm -rf ${Clash_run_path}/root \
    && echo $date_log"info: 自动更新流量使用信息已关闭." >> ${CFM_logs_file}
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            fuck_log &>> /data/clash/run/service.log
            start_clash &>> /data/clash/run/service.log
            start_mos &>> /data/clash/run/service.log
            ;;
        k)
            stop_clash &>> /data/clash/run/service.log
            stop_mos &>> /data/clash/run/service.log
            ;;
        ?)
            echo ""
            ;;
    esac
done
